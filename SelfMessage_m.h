//
// Generated file, do not edit! Created by opp_msgc 4.2 from SelfMessage.msg.
//

#ifndef _SELFMESSAGE_M_H_
#define _SELFMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "SimpleAddress.h"
// }}



/**
 * Class generated from <tt>SelfMessage.msg</tt> by opp_msgc.
 * <pre>
 * message SelfMessage
 * {
 *     LAddress::L3Type address;
 *     double aveHopTime;
 *     int hop;
 *     simtime_t begintime;
 * }
 * </pre>
 */
class SelfMessage : public ::cMessage
{
  protected:
    LAddress::L3Type address_var;
    double aveHopTime_var;
    int hop_var;
    simtime_t begintime_var;

  private:
    void copy(const SelfMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SelfMessage&);

  public:
    SelfMessage(const char *name=NULL, int kind=0);
    SelfMessage(const SelfMessage& other);
    virtual ~SelfMessage();
    SelfMessage& operator=(const SelfMessage& other);
    virtual SelfMessage *dup() const {return new SelfMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual LAddress::L3Type& getAddress();
    virtual const LAddress::L3Type& getAddress() const {return const_cast<SelfMessage*>(this)->getAddress();}
    virtual void setAddress(const LAddress::L3Type& address);
    virtual double getAveHopTime() const;
    virtual void setAveHopTime(double aveHopTime);
    virtual int getHop() const;
    virtual void setHop(int hop);
    virtual simtime_t getBegintime() const;
    virtual void setBegintime(simtime_t begintime);
};

inline void doPacking(cCommBuffer *b, SelfMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SelfMessage& obj) {obj.parsimUnpack(b);}


#endif // _SELFMESSAGE_M_H_
